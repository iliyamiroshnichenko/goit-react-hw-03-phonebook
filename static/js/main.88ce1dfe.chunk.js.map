{"version":3,"sources":["components/Container/Container.module.css","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/Container/Container.jsx","components/ContactForm/ContactForm.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","index.js","components/ContactListItem/ContactListItem.module.css"],"names":["module","exports","Container","children","className","styles","container","initialState","name","number","ContactForm","onSubmit","useState","inputValue","setInputValue","changeInput","e","currentTarget","value","form","preventDefault","reset","type","pattern","title","required","placeholder","onChange","ContactListItem","id","onDeleteContact","contact","tel","onClick","ContactList","contacts","map","Filter","input","defaultProps","App","setContacts","filter","setFilter","useEffect","parsedContacts","JSON","parse","localStorage","getItem","setItem","stringify","normalizedFilter","toLowerCase","filteredContacts","includes","normalizedName","find","alert","newContact","shortid","generate","prState","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.88ce1dfe.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__24bQP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2xP47\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__2ZZMC\"};","import PropTypes from 'prop-types';\nimport styles from './Container.module.css';\n\nconst Container = ({ children }) => (\n  <div className={styles.container}>{children}</div>\n);\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Container;\n","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactForm.module.css';\r\n\r\nconst initialState = {\r\n  name: '',\r\n  number: '',\r\n};\r\n\r\nconst ContactForm = ({ onSubmit }) => {\r\n  const [inputValue, setInputValue] = useState(initialState);\r\n  const { name, number } = inputValue;\r\n\r\n  const changeInput = e => {\r\n    const { name, value } = e.currentTarget;\r\n    setInputValue({ ...inputValue, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    onSubmit(name, number);\r\n    setInputValue(initialState);\r\n    e.currentTarget.reset();\r\n  };\r\n\r\n  return (\r\n    <form className={styles.form} onSubmit={handleSubmit}>\r\n      <label>\r\n        Name\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          placeholder=\"Enter your name\"\r\n          onChange={changeInput}\r\n        />\r\n      </label>\r\n      <label>\r\n        Number\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n          title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n          required\r\n          placeholder=\"Enter your number\"\r\n          onChange={changeInput}\r\n        />\r\n      </label>\r\n      <button type=\"submit\">Add contact</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactForm;\r\n","import PropTypes from 'prop-types';\nimport styles from './ContactListItem.module.css';\n\nconst ContactListItem = ({ id, name, number, onDeleteContact }) => {\n  return (\n    <li className={styles.contact}>\n      <p className={styles.name}>{name}</p>\n      <p className={styles.tel}>{number}</p>\n      <button type=\"button\" onClick={() => onDeleteContact(id)}>\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactListItem;\n","import PropTypes from 'prop-types';\nimport ContactListItem from '../ContactListItem';\n// import styles from './ContactList.module.css';\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <ul>\n      {contacts.map(({ id, name, number }) => (\n        <ContactListItem\n          key={id}\n          id={id}\n          name={name}\n          number={number}\n          onDeleteContact={onDeleteContact}\n        />\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import PropTypes from 'prop-types';\nimport styles from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <>\n      <label>\n        Find contacts by name\n        <input\n          className={styles.input}\n          type=\"text\"\n          value={value}\n          onChange={onChange}\n        />\n      </label>\n    </>\n  );\n};\n\nFilter.defaultProps = {\n  value: '',\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import { useState, useEffect } from 'react';\nimport shortid from 'shortid';\n\nimport Container from './components/Container';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\n\n// const initialContacts = [\n//   { id: 'id-1', name: 'Илья Мирошниченко', number: '+380993533451' },\n//   { id: 'id-2', name: 'Илон Маск', number: '+123456789147' },\n//   { id: 'id-3', name: 'Марк Цукерберг', number: '+198453489753' },\n//   { id: 'id-4', name: 'Александр Репета', number: '+380503533999' },\n// ];\n\nfunction App() {\n  const [contacts, setContacts] = useState([]);\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    const parsedContacts = JSON.parse(localStorage.getItem('contacts'));\n    setContacts(parsedContacts);\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const addContact = (name, number) => {\n    const normalizedName = name.toLowerCase();\n    if (\n      contacts.find(contact => contact.name.toLowerCase() === normalizedName)\n    ) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n    const newContact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n    setContacts(prState => [newContact, ...prState]);\n  };\n\n  const changeFilter = e => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const deleteContact = contactId =>\n    setContacts(prState => prState.filter(({ id }) => id !== contactId));\n\n  const normalizedFilter = filter.toLowerCase();\n  const filteredContacts = contacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter),\n  );\n\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <ContactForm onSubmit={addContact} />\n      <h2>Contacts</h2>\n      <Filter value={filter} onChange={changeFilter} />\n      <ContactList\n        contacts={filteredContacts}\n        onDeleteContact={deleteContact}\n      />\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"ContactListItem_contact__3OYCA\",\"name\":\"ContactListItem_name__1DXMG\",\"tel\":\"ContactListItem_tel__1MpsD\"};"],"sourceRoot":""}